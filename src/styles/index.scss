@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";
// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
@import url('https://fonts.googleapis.com/css?family=Roboto:100,100italic,300,300italic,regular,italic,500,500italic,700,700italic,900,900italic');

// Подключить если есть локальные файлы шрифтов
//@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================

$fontFamily: 'Roboto';
$fontSize: rem(14); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #fff; // Цвет шрифта по умолчанию

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1170;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина страбатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";
@import "common/common.scss";

body {
	background: rgb(42, 42, 42);
	color: #fff;

	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}

	// Сайт загружен
	// .loaded & {}
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================

.wrapper {
	min-height: 100vh;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	position: relative;

	// Прижимаем footer
	>main {
		flex: 1 1 auto;
	}

	// Фикс для слайдеров
	>* {
		min-width: 0;
	}
}

.page {
	>main {
		flex: 1 1 auto;
	}
}

[class*="__container"] {
	@if ($maxWidthContainer>0) {
		max-width: rem($maxWidthContainer);
		box-sizing: content-box;
		margin: 0 auto;
	}

	@if ($containerPadding>0) {
		padding: 0 rem(math.div($containerPadding, 2));
	}
}

//========================================================================================================================================================